[{"name": "app.py", "content": "import plotly.express as px\nfrom shiny.express import input, ui, render\nfrom shinywidgets import render_plotly\nfrom shiny import reactive, req\nimport seaborn as sns\nfrom palmerpenguins import load_penguins\n\npenguins_df = load_penguins()\nspecies_list: list = penguins_df[\"species\"].unique().tolist()\nisland_list: list = penguins_df[\"island\"].unique().tolist()\n\ndef format_name(name) -> str:\n    split_name: list = name.rsplit(\"_\", 1)\n    new_name: str = split_name[0].replace(\"_\", \" \").title() + f\" ({split_name[1]})\"\n    return new_name\n\npenguins_df.columns = [\n    format_name(name) if penguins_df.dtypes[name] == float else name.title()\n    for name in penguins_df.columns\n]\npenguins_df[\"Sex\"] = penguins_df[\"Sex\"].str.title()\ncontinuous_variables: list = penguins_df.select_dtypes(include=float).columns.tolist()\n\nui.tags.style(\n    \"\"\"\n    .card-with-shadow {box-shadow: 0px 4px 8px rgba(0, 0, 75, 0.5);}\n    #my_sidebar {box-shadow: 0px 4px 8px rgba(0, 0, 75, 0.5);}\n    \"\"\"\n)\nui.page_opts(title=\"Penguin Data By Jordan\", fillable=True)\n\nwith ui.sidebar(open=\"open\", id=\"my_sidebar\"):\n    ui.h2(\"Sidebar\")\n    ui.input_selectize(\"selected_attribute\", \"Select Attribute\", continuous_variables)\n    ui.input_numeric(\"plotly_bin_count\", \"Plotly Histogram Bins\", 50)\n    ui.input_slider(\"seaborn_bin_count\", \"Seaborn Histogram Bins\", 10, 344, 50)\n    ui.input_checkbox_group(\n        \"selected_species_list\",\n        \"Select Species\",\n        choices = species_list,\n        selected = species_list,\n        inline = True,\n    )\n    ui.input_checkbox_group(\n        \"selected_island_list\",\n        \"Select Island\",\n        choices = island_list,\n        selected = island_list,\n        inline = True,\n    )\n    ui.input_selectize(\n        \"selected_attribute_y_scatter\",\n        \"Scatterplot y-axis Attribute\",\n        continuous_variables[::-1],\n    )\n    ui.hr()\n    ui.a(\"GitHub\", href=\"https://github.com/JfromNWMS/cintel-02-data\", target=\"_blank\")\n\n\n@reactive.calc\ndef filtered_data():\n    req(input.selected_species_list(), input.selected_island_list())\n    is_species_match = penguins_df[\"Species\"].isin(input.selected_species_list())\n    is_island_match = penguins_df[\"Island\"].isin(input.selected_island_list())\n    filtered_penguins_df = penguins_df[is_species_match & is_island_match]\n    req(not filtered_penguins_df.empty)\n    return filtered_penguins_df\n\n\nwith ui.layout_columns():\n\n    with ui.card(full_screen=True, class_=\"card-with-shadow\"):\n\n        @render.data_frame\n        def datatable():\n            return render.DataTable(filtered_data(), height=\"185px\")\n\n    with ui.card(full_screen=True, class_=\"card-with-shadow\"):\n\n        @render.data_frame\n        def datagrid():\n            return render.DataGrid(filtered_data())\n\n\nwith ui.layout_columns():\n\n    with ui.card(full_screen=True, class_=\"card-with-shadow\"):\n        ui.card_header(\"Plotly Histogram: Species\")\n\n        @render_plotly\n        def plotly_hist():\n            px_hist = px.histogram(\n                data_frame = filtered_data(),\n                x = input.selected_attribute(),\n                nbins = input.plotly_bin_count(),\n                color = \"Species\",\n                template = \"plotly_white\",\n                opacity = 0.5\n            )\n            px_hist.update_yaxes(\n                title_text = px_hist.layout.yaxis.title.text.title(),\n            )\n            return px_hist\n\n    with ui.card(full_screen=True, class_=\"card-with-shadow\"):\n        ui.card_header(\"Seaborn Histogram: Species\")\n\n        @render.plot\n        def sns_hist():\n            sns.set_style(\"whitegrid\")\n            sns.histplot(\n                data = filtered_data(),\n                x = input.selected_attribute(),\n                bins = input.seaborn_bin_count(),\n                hue = \"Species\",\n            )\n\n\nwith ui.card(full_screen=True, class_=\"card-with-shadow\"):\n    ui.card_header(\"Plotly Scatterplot: Species\")\n\n    @render_plotly\n    def plotly_scatterplot():\n        px_scatter = px.scatter(\n            data_frame = filtered_data(),\n            x = input.selected_attribute(),\n            y = input.selected_attribute_y_scatter(),\n            color = \"Species\",\n            opacity = 0.7,\n            symbol = \"Sex\",\n            hover_data = \"Island\",\n            template = \"plotly_white\",\n        )\n        return px_scatter\n", "type": "text"}]